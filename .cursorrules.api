# API Development Rules for Clinic Admin

## PRIMARY RULE: Always Check Local API Docs First
**BEFORE implementing any API-related functionality, ALWAYS check:**
`http://localhost:3001/api/docs`

## API Documentation Priority
1. **FIRST**: Check `http://localhost:3001/api/docs` for endpoint details
2. **SECOND**: Check existing service files for patterns
3. **THIRD**: Check existing type definitions
4. **LAST**: Make educated guesses (only if absolutely necessary)

## When Working with APIs
- **NEVER** assume endpoint structure without checking the docs
- **NEVER** assume request/response format without verification
- **ALWAYS** use the exact field names from the API documentation
- **ALWAYS** implement proper error handling for API calls

## Service Layer Usage
- **ALWAYS** use existing service classes (AppointmentsService, UsersService, etc.)
- **NEVER** make direct fetch/axios calls - use the service layer
- **ALWAYS** implement proper loading states and error handling
- **ALWAYS** use the existing apiService from `src/services/api.ts`

## Type Safety
- **ALWAYS** create proper TypeScript interfaces based on API responses
- **NEVER** use `any` type for API data
- **ALWAYS** validate API responses before using them
- **ALWAYS** handle optional fields properly

## Common API Patterns in This Project
- Use `apiService.get()`, `apiService.post()`, etc.
- Implement proper caching with the cache service
- Handle network errors gracefully
- Use retry logic for failed requests
- Clear cache when data is modified

## Example Workflow for New API Features
1. **Check** `http://localhost:3001/api/docs` for endpoint details
2. **Create** proper TypeScript interfaces
3. **Implement** service method using existing patterns
4. **Add** proper error handling and loading states
5. **Test** with TypeScript and linting

Remember: The local API docs are your single source of truth!
